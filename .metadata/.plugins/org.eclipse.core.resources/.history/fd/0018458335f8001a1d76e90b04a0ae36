package pageObject;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindAll;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import managers.FileReaderManager;
import selenium.Wait;

public class HomePage {

	WebDriver driver;
	

	public HomePage(WebDriver driver) {
		this.driver = driver;
		PageFactory.initElements(driver, this);
	}
	
	@FindBy(id = "footer")
	WebElement footer;
	@FindBy(css = ".facebook [target='_blank']")
	WebElement btn_Facebook;
	@FindBy(css = ".twitter [target='_blank']")
	WebElement btn_Twitter;
	@FindBy(css = ".youtube [target='_blank']")
	WebElement btn_Youtube;
	@FindBy(css = ".google-plus [target='_blank']")
	WebElement btn_GooglePlus;
	@FindBy(css = "[href='http://automationpractice.com/index.php?id_category=3&controller=category'][title='Women']")
	WebElement btn_Women;
	@FindBy(xpath = "/html[1]/body[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/ul[1]/li[2]/div[1]/div[1]/div[1]/a[1]/img[1]")
	WebElement pic_Blouse;
	@FindBy(xpath = "/html[1]/body[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/ul[1]/li[2]/div[1]/div[2]/div[2]/a[1]/span[1]")
	WebElement adToCart_Blouse;
	@FindBy(id = "layer_cart_product_price")
	WebElement cartProductPrice;
	@FindBy(xpath = "//span[@class='ajax_block_cart_total']")
	WebElement cartTotalPrice;
	@FindBy(css = "[title='Proceed to checkout']")
	WebElement btn_ProceedToCheckout;
	@FindBy(css = "[title='Contact us']")
	WebElement btn_ContactUs;
	@FindAll(@FindBy(css = "#blockbestsellers [itemprop='price']"))
	List<WebElement> prd_BestsellersListPrice;
	@FindAll(@FindBy(css = "#blockbestsellers .product-name"))
	List<WebElement> prd_BestsellersListName;
	@FindBy(css = "[href='#blockbestsellers']")
	WebElement btn_Bestsellers;
	
	
	public void navigateTo_HomePage() {
		driver.get(FileReaderManager.getInstance().getConfigReader().getApplicationUrl());
	}
	
	public void scrollToFooter() {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].scrollIntoView();", footer);	
	}
	
	public boolean isDisplayed_Facebook() {
		return btn_Facebook.isDisplayed();
	}
	
	public boolean isDisplayed_Twitter() {
		return btn_Twitter.isDisplayed();
	}
	
	public boolean isDisplayed_Youtube() {
		return btn_Youtube.isDisplayed();
	}
	
	public boolean isDisplayed_GooglePlus() {
		return btn_GooglePlus.isDisplayed();
	}
	
	public void click_Women() {
		btn_Women.click();
	}
	
	public void addToCartBlouse() {
		Actions action = new Actions(driver);
		action.moveToElement(pic_Blouse).moveToElement(adToCart_Blouse).click().build().perform();
	}
	
	public String getCartProductPrice(){
		WebDriverWait wait = new WebDriverWait(driver, 10);
		wait.until(ExpectedConditions.visibilityOf(cartProductPrice));
		return cartProductPrice.getText();
	}
	
	public String getCartTotalPrice(){
		return cartTotalPrice.getText();
	}
	
	public void click_ProceedToCheckout() {
		btn_ProceedToCheckout.click();
	}
	
	public void click_ContactUs() {
		btn_ContactUs.click();
	}
	
	public void click_Bestsellers() {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].scrollIntoView();", btn_Bestsellers);
		btn_Bestsellers.click();
		Wait.untilJqueryIsDone(driver);
	}
	
	public List<String> getBestsellersProductNames() throws InterruptedException {
		List<String> productNames = new ArrayList<>();
		for (WebElement name : prd_BestsellersListName) {
			System.out.println(name.getText());
			productNames.add(name.getText());	
		}
		return productNames;
	}
	
	public List<String> getBestsellersProductPrices() throws InterruptedException {
		List<String> productPrices = new ArrayList<>();
		for (WebElement price : prd_BestsellersListPrice) {
			if(price.getText().equals("")) {
			} else {
				System.out.println(price.getText());
				productPrices.add(price.getText());	
			}
		}
		return productPrices;
	}
	
	public void saveToFile() throws FileNotFoundException, InterruptedException {
		try (PrintStream out = new PrintStream(new FileOutputStream("filename.txt"))) {
		    out.print(getBestsellersProductNames());
		    out.print(getBestsellersProductPrices());
		    out.close();
		}
	}
	

}
